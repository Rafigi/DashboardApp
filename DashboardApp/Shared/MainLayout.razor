@inherits LayoutComponentBase
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@inject IDataService dataService
@implements IAsyncDisposable
@using DashboardApp.Models
@using DashboardApp.Services
@using DatabaseService.Dtos
@using FTPServices.Models


<div class="page">
    <div>
        <div class="container">
            <h1 class="title-box">
                Dashboard
            </h1>
            @Body
        </div>
        <div class="container">
            <div class="row">
                <div class="col">
                    <div class="dashboard-box">
                        <h2>SOAP</h2>
                        <div class="sunbox">
                            <p>Solopgang: @Sunrise.ToShortTimeString() </p>
                            <p>Solnedgang: @sunset.ToShortTimeString() </p>
                        </div>
                        <div class="table-box">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th scope="col">Dato</th>
                                        <th scope="col">Tidspunkt</th>
                                        <th scope="col">Temperatur</th>
                                        <th scope="col">Skydækket</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var weatherForcastDto in weatherForcastDtos)
                                    {
                                        <tr>
                                            <td>@weatherForcastDto.Datetime.ToShortDateString() </td>
                                            <td>@weatherForcastDto.Datetime.ToLongTimeString() </td>
                                            <td>@weatherForcastDto.Temp &#8451 </td>
                                            <td>@weatherForcastDto.CloudCover %</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="dashboard-box">
                        <h2>FTP Solpanel</h2>
                        <div>
                            <p>@solarPanel.Date</p>

                            Nuværende genereret strøm:
                            <p> @solarPanel.Energy KWH</p>

                        </div>
                    </div>
                </div>

                <div class="col">
                    <div class="dashboard-box">
                        <h2>Database: Temparetur indenfor</h2>
                        <div class="table-box">

                            <table class="table">
                                <thead>
                                    <tr>
                                        <th scope="col">Dato</th>
                                        <th scope="col">Tidspunkt</th>
                                        <th scope="col">Grader</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var TemperaturDto in TemperaturDtos)
                                    {
                                        <tr>
                                            <td>@TemperaturDto.Dato.ToShortDateString() </td>
                                            <td>@TemperaturDto.Tidspunkt </td>
                                            <td>@TemperaturDto.Grader &#8451 </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private HubConnection? hubConnection;
    private List<WeatherForcastDto> weatherForcastDtos = new List<WeatherForcastDto>();
    public SolarPanel solarPanel = new SolarPanel();
    public List<TemperaturDto> TemperaturDtos = new List<TemperaturDto>();
    DateTime Sunrise = new DateTime();
    DateTime sunset = new DateTime();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        weatherForcastDtos = await dataService.GetWeatherForcast("kolding");

        TemperaturDtos = await dataService.GetTemperaturFromInside(10);

        solarPanel = await dataService.GetSolarPanelPower();


        sunset = weatherForcastDtos.First().Sunset;
        Sunrise = weatherForcastDtos.First().Sunrise;

        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/notifyhub"))
            .Build();

        hubConnection.On("NotificationFtpChange", async () =>
        {
            solarPanel = await dataService.GetSolarPanelPower();
            StateHasChanged();
        });

        hubConnection.On("NotificatioDatabaseChange", async () =>
        {
            TemperaturDtos = await dataService.GetTemperaturFromInside(10);
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }


    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}